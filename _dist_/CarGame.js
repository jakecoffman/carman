/* src\CarGame.svelte generated by Svelte v3.23.2 */
import {
	SvelteComponent,
	create_component,
	destroy_component,
	detach,
	empty,
	init,
	insert,
	mount_component,
	noop,
	safe_not_equal,
	transition_in,
	transition_out
} from "../web_modules/svelte/internal.js";

import Phaser from "../web_modules/phaser.js";
import Menu from "./Menu.js";

function create_if_block(ctx) {
	let menu;
	let current;
	menu = new Menu({ props: { game: /*game*/ ctx[0] } });

	return {
		c() {
			create_component(menu.$$.fragment);
		},
		m(target, anchor) {
			mount_component(menu, target, anchor);
			current = true;
		},
		p: noop,
		i(local) {
			if (current) return;
			transition_in(menu.$$.fragment, local);
			current = true;
		},
		o(local) {
			transition_out(menu.$$.fragment, local);
			current = false;
		},
		d(detaching) {
			destroy_component(menu, detaching);
		}
	};
}

function create_fragment(ctx) {
	let if_block_anchor;
	let current;
	let if_block = /*game*/ ctx[0] && create_if_block(ctx);

	return {
		c() {
			if (if_block) if_block.c();
			if_block_anchor = empty();
		},
		m(target, anchor) {
			if (if_block) if_block.m(target, anchor);
			insert(target, if_block_anchor, anchor);
			current = true;
		},
		p(ctx, [dirty]) {
			if (/*game*/ ctx[0]) if_block.p(ctx, dirty);
		},
		i(local) {
			if (current) return;
			transition_in(if_block);
			current = true;
		},
		o(local) {
			transition_out(if_block);
			current = false;
		},
		d(detaching) {
			if (if_block) if_block.d(detaching);
			if (detaching) detach(if_block_anchor);
		}
	};
}

function instance($$self) {
	const config = {
		type: Phaser.AUTO,
		// width: '100%',
		// height: '100%',
		input: { gamepad: true },
		physics: {
			default: "arcade",
			arcade: { gravity: { y: 0 } }
		},
		scale: {
			mode: Phaser.Scale.FIT,
			autoCenter: Phaser.Scale.CENTER_BOTH
		}
	};

	const game = new Phaser.Game(config);
	return [game];
}

class CarGame extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, instance, create_fragment, safe_not_equal, {});
	}
}

export default CarGame;